@model MRT_Demo.Models.Indicator

@{
    ViewBag.Title = "Target";
}

<h2>การรายงานผลการดำเนิน/คาดการณ์ผลการดำเนินงานตามตัวชี้วัดที่สำคัญขององค์กร</h2>

@using (Html.BeginForm("Result", "IndicatorTargetAndResults", FormMethod.Post, new { @class = "form-horizontal", id = "Resultform", name = "Resultform", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.IsActive)
    @Html.HiddenFor(m => m.isActiveText)
    @Html.HiddenFor(m => m.CreateBy)
    @Html.HiddenFor(m => m.UpdateBy)
    @Html.HiddenFor(m => m.CreateDate)
    @Html.HiddenFor(m => m.UpdateDate)
    @Html.HiddenFor(m => m.IsDelete)
    @Html.HiddenFor(m => m.IsLastDelete)
    @Html.HiddenFor(m => m.Formula)
    @Html.HiddenFor(m => m.Indicator1)
    @Html.HiddenFor(m => m.IndicatorDetailStatusID)
    @Html.Hidden("IndexInList")
    @Html.Hidden("File4")



    <div hidden>
        @Html.EditorFor(m => m.IndicatorUnits)
        @Html.EditorFor(m => m.IndicatorXIndicatorTypes)
        @Html.EditorFor(m => m.ImportantIndicatorTargetMeasurement)
        @Html.EditorFor(m => m.IndicatorOwners)
    </div>

    <div class="form-horizontal">
        <hr />
        <div class="row">
            <div class=" col-md-3 text-end">
                @Html.DisplayName("ปีงบประมาณ :")
            </div>
            <div class="col-md-9">
                @Html.EditorFor(m => m.indicatorYear, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>
        <div class="row">
            <div class=" col-md-3 text-end">
                @Html.DisplayName("ชื่อตัวชี้วัด :")
            </div>
            <div class="col-md-9">
                @Html.EditorFor(m => m.Indicator1, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Indicator1, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-3 text-end">
                @Html.DisplayName("ส่วนงานทำการคาดการณ์ :")
            </div>
            <div class="col-md-8">
                <table class="table table-responsive-md">
                    <tr>
                        <th>
                            @Html.DisplayName("สังกัด")
                        </th>
                    </tr>
                    @foreach (var item in Model.IndicatorOwners)
                    {
                        @Html.EditorFor(m => item, "IndicatorOwnerDisabled")
                    }

                </table>
            </div>
        </div>
        <br />
        <br />

        <div class="row">
            <div class="col-md-3 text-end">
                @Html.DisplayName("ตัวชี้วัดที่สำคัญ :")
            </div>
            <div class="col-md-8">
                <table class="table table-bordered">
                    <tr>
                        <th rowspan="2" class="text-center">
                            @Html.DisplayName("ชื่อหน่วยวัด")
                        </th>
                        <th rowspan="2" class="text-center">
                            @Html.DisplayName("หน่วยวัด")
                        </th>
                        <th colspan="5" class="text-center">
                            @Html.DisplayName("ค่าเป้าหมาย/เกณฑ์วัด")
                        </th>
                    </tr>
                    <tr>
                        <th class="text-center">1</th>
                        <th class="text-center">2</th>
                        <th class="text-center">3</th>
                        <th class="text-center">4</th>
                        <th class="text-center">5</th>
                    </tr>
                    @{
                        var i = 0;
                        var j = 0;
                    }
                    @foreach (var item in Model.SOEPlanIndicator.Where(b => b.IndicatorID == Model.ID && b.SubTarget.Where(ba => ba.Year == Model.indicatorYear).Count() > 0))
                    {
                        @Html.EditorFor(m => item, "SOEPlanIndicatorDisabledAll", "SOEPlanIndicator[" + j++ + "]")
                    }
                    @foreach (var XType in Model.IndicatorXIndicatorTypes)
                    {
                        if (XType.level == 0)
                        {
                            <tr>
                                <td class="w-25">
                                    @Html.DisplayFor(m => XType.IndicatorType.IndicatorType1, new { HtmlAttributes = new { @class = "form-control" } })
                                </td>
                                @foreach (var item in Model.ImportantIndicatorTargetMeasurement.Where(b => b.level == i))
                                {
                                    @Html.EditorFor(m => item, "ImportantIndicatorTargetMeasurementDisabled", "ImportantIndicatorTargetMeasurementDisabled[" + i + "]")
                                }
                            </tr>
                        }
                        else
                        {
                            <tr>
                                @foreach (var item in Model.ImportantIndicatorTargetMeasurement.Where(b => b.level == i))
                                {
                                    @Html.EditorFor(m => item, "ImportantIndicatorTargetMeasurementDisabled", "ImportantIndicatorTargetMeasurementDisabled[" + i + "]")
                                }
                            </tr>
                        }
                        i++;
                    }
                </table>
            </div>

        </div>
        <br />
        <hr />
        @Html.EditorFor(m => m.ImportantIndicatorResultMeasurement)

        <br />
        <br />
        <div class="row">
            <div class="offset-md-3 col-md-1 ">
                <input value="บันทึก" class="btn btn-primary" type="submit" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    @Html.ActionLink("Back to List", "Index", "IndicatorTargetAndResults", new { SelectedYear = Model.indicatorYear }, new { @class = "btn btn-secondary" })
</div>

<script>
    function FuncChangePeriod() {
        var c = document.getElementsByName('PeriodMonthOrQuaterOrYearID');
        var x = document.getElementById("Month");
        var y = document.getElementById("Quater");
        var z = document.getElementById("Year");

        for (i = 0; i < c.length; i++) {
            if (c[0].checked) {
                x.style.display = "block";
                y.style.display = "none";
                z.style.display = "none";
            }
            if (c[1].checked) {
                x.style.display = "none";
                y.style.display = "block";
                z.style.display = "none";
            }
            if (c[2].checked) {
                x.style.display = "none";
                y.style.display = "none";
                z.style.display = "block";
            }
        }

        $("#Resultform").attr("action", '@Url.Action("ChangePeriod","IndicatorTargetAndResults")');
        $("#Resultform").submit();
    }
    function FuncChangeMonthQuarterHailfYear(e) {

        document.getElementById('IndexInList').value = e;

        $("#Resultform").attr("action", '@Url.Action("ChangeMonthQuarterHailfYear","IndicatorTargetAndResults")');
        $("#Resultform").submit();
    }
    function FuncAddCompetitorValue(e) {
        e.value = true;

        $("#Resultform").attr("action", '@Url.Action("AddCompetitorValue","IndicatorTargetAndResults")');
        $("#Resultform").submit();
    }
    function FuncDelCompetitorValue(e) {
        e.value = true;

        $("#Resultform").attr("action", '@Url.Action("DelCompetitorValue","IndicatorTargetAndResults")');
        $("#Resultform").submit();
    }
    function FuncRefreshPage() {

        $("#Resultform").attr("action", '@Url.Action("RefreshPage","IndicatorTargetAndResults")');
        $("#Resultform").submit();
    }
    function FuncChangeDisabled(id) {
        id.disabled = !id.disabled;
    }
</script>
